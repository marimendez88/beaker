security:
    acl:
        connection: default
    encoders:
        FOS\UserBundle\Model\UserInterface: sha512
        #Symfony\Component\Security\Core\User\User: plaintext

    role_hierarchy:
        ROLE_ADMIN        : [ROLE_USER, ROLE_SONATA_ADMIN]
        ROLE_SUPER_ADMIN  : [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
#        ROLE_SELLER       : [ROLE_USER]
#        ROLE_BUYER        : [ROLE_USER]
#        ROLE_NOVEDAD      : [ROLE_ADMIN]
#        ROLE_PROVEEDURIA  : [ROLE_ADMIN]
#        ROLE_MERCADEO  : [ROLE_ADMIN]
#        ROLE_COMUNICACION  : [ROLE_ADMIN]
#        ROLE_BIENES  : [ROLE_ADMIN]
#        ROLE_SUPER_ADMIN  : [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        SONATA:
            - ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT

    providers:
        fos_userbundle:
            id: fos_user.user_manager
#            id: fos_user.user_provider.username_email

#        in_memory:
#            memory:
#                users:
#                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
#                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }

    firewalls:
        # -> custom firewall for the admin area of the URL
        admin:
            switch_user:        true
            context:            user
            pattern:            /admin(.*)
            form_login:
                provider:       fos_userbundle
                login_path:     /admin/login
                use_forward:    false
                check_path:     /admin/login_check
                failure_path:   null
                use_referer:    true
            logout:
                path:           /admin/logout
                target:         /admin/login

            anonymous:    true
        # -> end custom configuration
        
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  ^/demo/secured/login$
            security: false

        secured_area:
            pattern:    ^/demo/secured/
            form_login:
                check_path: _security_check
                login_path: _demo_login
            logout:
                path:   _demo_logout
                target: _demo
                
################################################################################
##     ConfiguraciÃ³n de la seguridad para el REST Bundle                      ##

#        wsse_secured:
#            pattern: ^/rest/.*
#            wsse: 
#                realm: "Secured API"
#                profile: "UsernameToken" 
#                lifetime: 6000 
#
#                encoder: #digest algorithm
#                    algorithm: sha1
#                    encodeHashAsBase64: true
#                    iterations: 1

################################################################################
                
        main:
            pattern: ^/
            form_login:
                provider: fos_userbundle
                csrf_provider: form.csrf_provider
                success_handler: lumen_auth_success_handler
                login_path: /
            logout:       true
            anonymous:    true
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"
            
    access_control:
        - { path: ^/demo/secured/hello/admin/, roles: ROLE_ADMIN }
        #- { path: /profile, roles: ROLE_ADMIN }
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        
        # URL of FOSUserBundle which need to be available to anonymous users
        - { path: ^/_wdt, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/_profiler, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # -> custom access control for the admin area of the URL
        - { path: ^/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login-check$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        # -> end

        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Secured part of the site
        # This config requires being logged for the whole site and having the admin role for the admin part.
        # Change these rules to adapt them to your needs
        # - { path: ^/admin/dashboard, role: [ROLE_ADMIN, ROLE_SONATA_ADMIN] }
        - { path: ^/admin/dashboard, role: [ROLE_ADMIN, ROLE_SONATA_ADMIN] }
        - { path: ^/admin, role: [ROLE_ADMIN, ROLE_NOVEDAD] }
        - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }

        - { path: ^/efconnect, role: ROLE_USER }
        - { path: ^/elfinder, role: ROLE_USER }